version: '3'

services:
  db:
    container_name: peche_postgres
    image: postgres:latest
    env_file:
      - ./.env
    restart: always
    ports:
      - "5432:5432"
    networks:
      - aisha

  redis:
    container_name: peche_redis
    image: redis:latest
    env_file:
      - ./.env
    restart: always
    ports:
      - "6379:6379"
    networks:
      - aisha
  

  fastapi:
    container_name: peche_fastapi
    build:
      context: .
    command: uvicorn application.main:app --host 0.0.0.0 --reload
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    networks:
      - aisha
    restart: always
    depends_on:
      - db
      - redis

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
  

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
    image: "provectuslabs/kafka-ui:latest"
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9093


networks:
  aisha:
    driver: bridge
